[{
  "Titulo": "AppBasicaCRUD",
  "Descripcion": "Generar un proyecto Blazor Server llamado **AppBasicaCRUD** con **CRUD completo** de un modelo **Producto**:\n\n1. **Modelo** en carpeta `Models/Producto.cs` con propiedades:\n   - `int Id` (PK)\n   - `string Nombre` (requerido)\n   - `string Descripcion`\n   - `decimal Precio` (requerido, > 0)\n   - `DateTime FechaAlta`\n\n2. **Data layer**:\n   - Clase `ApplicationDbContext : DbContext` en `Data/ApplicationDbContext.cs` con `DbSet<Producto> Productos`.\n   - Configurar en `Program.cs` con `builder.Services.AddDbContext<ApplicationDbContext>(opt => opt.UseInMemoryDatabase(\\\"ProductosDb\\\"));`\n\n3. **Páginas Razor** en `Pages/Productos/`:\n   - **Index.razor**: Listado paginado de productos, buscador por nombre y enlaces Editar/Eliminar.\n   - **Create.razor**: Formulario para nuevo producto con validaciones DataAnnotations.\n   - **Edit.razor**: Formulario para editar, cargando por Id.\n   - **Delete.razor**: Confirmación de borrado.\n   - Cada página debe inyectar `ApplicationDbContext` y usar `await _context.SaveChangesAsync()`.\n\n4. **Validaciones**:\n   - `[Required]` en Nombre y Precio.\n   - `[Range(0.01, double.MaxValue)]` en Precio.\n\n5. **Menú de navegación**:\n   - En `Shared/NavMenu.razor`, añadir enlace `<NavLink href=\\\"/productos\\\">Productos</NavLink>`.\n\n6. **Estilos**:\n   - Usar Bootstrap para formularios y tablas.\n\n7. **No incluyas explicaciones**, solo devuelve los archivos completos con su contenido. Asegurate de que el contenido de los archivos este completo y cumpla todas sus funciones basicas"
}
]
